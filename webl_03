#define BLYNK_TEMPLATE_ID "TMPL3jWyYfmsw"
#define BLYNK_TEMPLATE_NAME "Rohan"
#define BLYNK_AUTH_TOKEN "OUvogf34O6jcm4fymlKxSGAbMqscuDr_" 

#include <DHT.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define DHTTYPE DHT11           // We're using the DHT11 sensor
#define DHT_PIN 4               // DHT11 is connected to GPIO 4
#define BLYNK_PRINT Serial      // Enable serial prints for Blynk

// WiFi credentials (declared using const char* just like ThingSpeak)
const char* ssid = "Redmi 12 5G";         
const char* pass = "rohan1022";           
const char* auth = "OUvogf34O6jcm4fymlKxSGAbMqscuDr_";  // Blynk authentication token

// Create a DHT object using the DHT class
DHT dht(DHT_PIN, DHTTYPE);

// Declare temperature and humidity variables
float t;  
float h;  

void setup() {
  Serial.begin(9600);  // Start serial communication

  // Connect to WiFi
  Serial.print("Connecting to WiFi");
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nWiFi Connected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Start Blynk connection
  Blynk.begin(auth, ssid, pass);

  // Start the DHT sensor
  dht.begin();
  Serial.println("DHT sensor initialized");
}

void sendUptime() {
  h = dht.readHumidity();        // Read humidity
  t = dht.readTemperature();     // Read temperature

  if (isnan(h) || isnan(t)) {    // Check if reading failed
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Print values in Serial Monitor
  Serial.println("\nHumidity and Temperature:");
  Serial.print("Humidity = ");
  Serial.print(h);
  Serial.print("%, Temperature = ");
  Serial.print(t);
  Serial.println("Â°C");

  // Send values to Blynk virtual pins
  Blynk.virtualWrite(V0, t);  // V0 = Temperature
  Blynk.virtualWrite(V1, h);  // V1 = Humidity
  Blynk.virtualWrite(V2, "R. No 05 , 03 , 23 , 19");  // Optional info
}

void loop() {
  Blynk.run();        // Keep Blynk connection active
  sendUptime();       // Send data to app
  delay(2000);        // Wait 2 seconds before next reading
}
